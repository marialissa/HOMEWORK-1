# Nome do arquivo de dados (deve estar na mesma pasta do script)
nome_arquivo <- "HMW1_bike_sharing.csv" # <-- SUBSTITUA PELO NOME DO SEU ARQUIVO
# Ler o arquivo CSV diretamente da pasta do projeto
dados_carros <- read_csv(nome_arquivo)
library(tidyverse)
library(knitr)
# Nome do arquivo de dados (deve estar na mesma pasta do script)
nome_arquivo <- "HMW1_bike_sharing.csv" # <-- SUBSTITUA PELO NOME DO SEU ARQUIVO
# Ler o arquivo CSV diretamente da pasta do projeto
dados_carros <- read_csv(nome_arquivo)
library(tidyverse)
library(knitr)
# Nome do arquivo de dados (deve estar na mesma pasta do script)
nome_arquivo <- "HMW1_bike_sharing.csv" # <-- SUBSTITUA PELO NOME DO SEU ARQUIVO
# Ler o arquivo CSV diretamente da pasta do projeto
dados_carros <- read_csv(nome_arquivo)
# Ler o arquivo CSV diretamente da pasta do projeto
dados_carros <- read_csv(nome_arquivo)
library(tidyverse)
library(knitr)
# Nome do arquivo de dados (deve estar na mesma pasta do script)
nome_arquivo <- "HMW1_bike_sharing.csv" # <-- SUBSTITUA PELO NOME DO SEU ARQUIVO
# Ler o arquivo CSV diretamente da pasta do projeto
dados_carros <- read_csv(nome_arquivo)
# Nome do arquivo de dados (deve estar na mesma pasta do script)
nome_arquivo <- "HW1_bike_sharing.csv" # <-- SUBSTITUA PELO NOME DO SEU ARQUIVO
# Ler o arquivo CSV diretamente da pasta do projeto
dados_carros <- read_csv(nome_arquivo)
# Vamos assumir que a primeira coluna é o nome do carro e vamos removê-la
dados_carros <- dados_carros |> select(-1)
#-----------------------------------------------------------------------
# Passo 2: Calcular as medidas de tendência central e quartis
# (Esta parte continua exatamente a mesma)
#-----------------------------------------------------------------------
sumario_estatistico <- summary(dados_carros)
#-----------------------------------------------------------------------
# Passo 3: Apresentar os resultados em uma tabela formatada
# (Esta parte também continua exatamente a mesma)
#-----------------------------------------------------------------------
tabela_resultados <- kable(sumario_estatistico,
caption = "Tabela 1: Medidas de Tendência Central e Quartis para Características de Carros",
format = "pipe")
# Exibir a tabela no console
print(tabela_resultados)
print(tabela_resultados)
# 1. Carregar os pacotes necessários
library(tidyverse)
library(knitr)
# 2. Ler o arquivo de dados
nome_arquivo <- "HW1_bike_sharing.csv"
dados_bikes <- read_csv(nome_arquivo)
# 3. SELECIONAR APENAS AS COLUNAS DE INTERESSE
#    Aqui está a principal mudança: em vez de remover colunas,
#    escolhemos apenas as que queremos analisar.
dados_analise <- dados_bikes |>
select(temp, casual, registered)
# 4. Calcular o sumário estatístico para as colunas selecionadas
sumario_estatistico <- summary(dados_analise)
# 5. Criar a tabela com um título apropriado
tabela_resultados <- kable(sumario_estatistico,
caption = "Tabela 1: Medidas Descritivas para Uso de Bicicletas",
format = "pipe")
# 6. Exibir a tabela final
print(tabela_resultados)
print(tabela_resultados)
print(tabela_resultados)
print(tabela_resultados)
print(tabela_resultados)
library(tidyverse)
dados_bike <- read_csv("HW1_bike_sharing.csv")
total_observacoes <- nrow(dados_bike)
dados_bike$dteday <- as_date(dados_bike$dteday)
data_inicio <- min(dados_bike$dteday)
data_fim <- max(dados_bike$dteday)
colunas_numericas <- c()
colunas_categoricas <- c()
# Muitas vezes, variáveis como 'season', 'holiday', 'weekday' etc.,
# são carregadas como números (inteiros), mas conceitualmente são categorias.
# Vamos listá-las para tratá-las corretamente.
categorias_em_numero <- c("season", "yr", "mnth", "hr", "holiday", "weekday", "workingday", "weathersit")
for (coluna in names(dados_bike)) {
if (coluna %in% categorias_em_numero) {
colunas_categoricas <- c(colunas_categoricas, coluna)
} else if (is.numeric(dados_bike[[coluna]])) {
colunas_numericas <- c(colunas_numericas, coluna)
} else {
colunas_categoricas <- c(colunas_categoricas, coluna)
}
}
cat("Número Total de Observações:", total_observacoes, "\n\n")
cat("Período da Amostra:\n")
cat("Data de Início:", format(data_inicio, "%d/%m/%Y"), "\n")
cat("Data de Fim:", format(data_fim, "%d/%m/%Y"), "\n\n")
cat("Classificação das Variáveis:\n")
cat("Variáveis Numéricas:\n", paste(" -", colunas_numericas, collapse = "\n"), "\n\n")
cat("Variáveis Categóricas:\n", paste(" -", colunas_categoricas, collapse = "\n"), "\n")
daily_emissions <- c(15.8, 22.7, 26.8, 19.1, 18.5, 14.4, 8.3, 25.9, 26.4, 9.8, 21.9, 10.5, 17.3, 6.2, 18.0, 22.9, 24.6, 19.4, 12.3, 15.9, 20.1, 17.0, 22.3, 27.5, 23.9, 17.5, 11.0, 20.4, 16.2, 20.8, 20.9, 21.4, 18.0, 24.3, 11.8, 17.9, 18.7, 12.8, 15.5, 19.2, 13.9, 28.6, 19.4, 21.6, 13.5, 24.6, 20.0, 24.1, 9.0, 17.6, 25.7, 20.1, 13.2, 23.7, 10.7, 19.0, 14.5, 18.1, 31.8, 28.5, 22.7, 15.2, 23.0, 29.6, 11.2, 14.7, 20.5, 26.6, 13.3, 18.1, 24.8, 26.1, 7.7, 22.5, 19.3, 19.4, 16.7, 16.9, 23.5, 18.4)
media <- mean(daily_emissions)
cat("média:", media, "\n")
mediana <- median(daily_emissions)
cat("mediana:", mediana, "\n")
tabela_freq <- table(daily_emissions)
moda <- names(tabela_freq)[tabela_freq == max(tabela_freq)]
cat("moda:", moda, "\n")
range <- max(daily_emissions) - min(daily_emissions)
cat("amplitude:", range, "\n")
sd <- sd(daily_emissions)
cat("desvio padrão:", sd, "\n")
var <- var(daily_emissions)
cat("variância:", var, "\n")
coef_variation <- (sd(daily_emissions) / mean(daily_emissions)) * 100
cat("coeficiente de variação:", coef_variation, "\n")
daily_emissions <- c(15.8, 22.7, 26.8, 19.1, 18.5, 14.4, 8.3, 25.9, 26.4, 9.8, 21.9, 10.5, 17.3, 6.2, 18.0, 22.9, 24.6, 19.4, 12.3, 15.9, 20.1, 17.0, 22.3, 27.5, 23.9, 17.5, 11.0, 20.4, 16.2, 20.8, 20.9, 21.4, 18.0, 24.3, 11.8, 17.9, 18.7, 12.8, 15.5, 19.2, 13.9, 28.6, 19.4, 21.6, 13.5, 24.6, 20.0, 24.1, 9.0, 17.6, 25.7, 20.1, 13.2, 23.7, 10.7, 19.0, 14.5, 18.1, 31.8, 28.5, 22.7, 15.2, 23.0, 29.6, 11.2, 14.7, 20.5, 26.6, 13.3, 18.1, 24.8, 26.1, 7.7, 22.5, 19.3, 19.4, 16.7, 16.9, 23.5, 18.4)
boxplot(daily_emissions,
main = "Boxplot das Emissões Diárias",
ylab = "Níveis de Emissão",
col = "pink")
daily_emissions <- c(15.8, 22.7, 26.8, 19.1, 18.5, 14.4, 8.3, 25.9, 26.4, 9.8, 21.9, 10.5, 17.3, 6.2, 18.0, 22.9, 24.6, 19.4, 12.3, 15.9, 20.1, 17.0, 22.3, 27.5, 23.9, 17.5, 11.0, 20.4, 16.2, 20.8, 20.9, 21.4, 18.0, 24.3, 11.8, 17.9, 18.7, 12.8, 15.5, 19.2, 13.9, 28.6, 19.4, 21.6, 13.5, 24.6, 20.0, 24.1, 9.0, 17.6, 25.7, 20.1, 13.2, 23.7, 10.7, 19.0, 14.5, 18.1, 31.8, 28.5, 22.7, 15.2, 23.0, 29.6, 11.2, 14.7, 20.5, 26.6, 13.3, 18.1, 24.8, 26.1, 7.7, 22.5, 19.3, 19.4, 16.7, 16.9, 23.5, 18.4)
boxplot(daily_emissions,
main = "Boxplot das Emissões Diárias",
ylab = "Níveis de Emissão",
col = "pink")
hist(daily_emissions,
main = "Histograma das Emissões Diárias",
xlab = "Níveis de Emissão",
ylab = "Frequência",
col = "lightblue",
border = "white")
daily_emissions <- c(15.8, 22.7, 26.8, 19.1, 18.5, 14.4, 8.3, 25.9, 26.4, 9.8, 21.9, 10.5, 17.3, 6.2, 18.0, 22.9, 24.6, 19.4, 12.3, 15.9, 20.1, 17.0, 22.3, 27.5, 23.9, 17.5, 11.0, 20.4, 16.2, 20.8, 20.9, 21.4, 18.0, 24.3, 11.8, 17.9, 18.7, 12.8, 15.5, 19.2, 13.9, 28.6, 19.4, 21.6, 13.5, 24.6, 20.0, 24.1, 9.0, 17.6, 25.7, 20.1, 13.2, 23.7, 10.7, 19.0, 14.5, 18.1, 31.8, 28.5, 22.7, 15.2, 23.0, 29.6, 11.2, 14.7, 20.5, 26.6, 13.3, 18.1, 24.8, 26.1, 7.7, 22.5, 19.3, 19.4, 16.7, 16.9, 23.5, 18.4)
boxplot(daily_emissions,
main = "Boxplot das Emissões Diárias",
ylab = "Níveis de Emissão",
col = "pink")
hist(daily_emissions,
main = "Histograma das Emissões Diárias",
xlab = "Níveis de Emissão",
ylab = "Frequência",
col = "lightblue",
border = "white")
boxplot(daily_emissions,
main = "Boxplot das Emissões Diárias",
ylab = "Níveis de Emissão",
col = "pink")
